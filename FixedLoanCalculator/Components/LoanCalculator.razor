@inject IJSRuntime jsRunTime;

<div class="input-chart">
    <EditForm Model="@loan" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary Model="@loan" />
        <div class="container">
            <label id="balanceLabel" for="balanceText" data-toggle="tooltip" data-placement="top" title="Enter a loan amount between $10 and $1,000,000,000.">Loan Amount</label>
            <InputNumber @bind-Value="loan.Balance" class="form-control" id="balanceText" />
            <ValidationMessage id="balanceMessage" For="@(() => loan.Balance)" class="text-danger" />

            <label id="rateLabel" for="rateSlider" data-toggle="tooltip" data-placement="top" title="Enter an interest rate between 0 and 35 percent.">Loan Rate</label>
            <InputNumber id="rateText" @bind-Value="loan.Rate" class="form-control" max="35" min="0" step="0.05"></InputNumber>
            <ValidationMessage id="rateMessage" For="@(() => loan.Rate)" class="text-danger" />

            <label id="termLabel" for="termSlider" data-toggle="tooltip" data-placement="top" title="Enter the loan term in months between 1 and 480.">Loan Term</label>
            <InputNumber id="termText" @bind-Value="loan.Term" class="form-control" max="480" min="0" step="6"></InputNumber>
            <ValidationMessage id="termMessage" For="@(() => loan.Term)" class="text-danger" />

            <label id="additionalLabel" for="additionalText" data-toggle="tooltip" data-placement="top" title="Enter any additional amount over the calculated payment you would like to apply to the principal">Additional Principal</label>
            <InputNumber id="additionalText" @bind-Value="loan.AdditionalPrincipal" class="form-control" min="0"></InputNumber>

            <input type="submit" id="formSubmit" value="Calculate Payback" class="btn btn-primary" />
        </div>

    </EditForm>

    <div id="chartdiv"></div>
</div>

<br/>
<br/>

@if (showTable)
{
    <div class="table-responsive">
        <table class="table table-hover table-striped table-bordered table-sm">
            <thead>
                <tr>
                    <th scope="col" rowspan="2">Month</th>
                    <th scope="col" colspan="6">Base Payment</th>
                    @if (loan.AdditionalPrincipal > 0)
                    {
                        <th scope="col" colspan="6">Base Payment + Aditional to Principal</th>
                    }
                </tr>
                <tr>
                    <th scope="col">Payment</th>
                    <th scope="col">Principal Paid</th>
                    <th scope="col">Interest Paid</th>
                    <th scope="col">Cumulative Interest</th>
                    <th scope="col">Cumulative Payment</th>
                    <th scope="col">Remaining Balance</th>
                    @if (loan.AdditionalPrincipal > 0)
                    {
                        <th scope="col">Payment</th>
                        <th scope="col">Principal Paid</th>
                        <th scope="col">Interest Paid</th>
                        <th scope="col">Cumulative Interest</th>
                        <th scope="col">Cumulative Payment</th>
                        <th scope="col">Remaining Balance</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var r in results)
                {
                <tr>
                    <th scope="row">@r.Month</th>
                    <td>@string.Format("{0:C}", r.TotalPayment)</td>
                    <td>@string.Format("{0:C}", r.PrincipalPayment)</td>
                    <td>@string.Format("{0:C}", r.InterestPayment)</td>
                    <td>@string.Format("{0:C}", r.TotalInterest)</td>
                    <td>@string.Format("{0:C}", r.TotalPaid)</td>
                    <td>@string.Format("{0:C}", r.Balance)</td>
                    @if (loan.AdditionalPrincipal > 0)
                    {
                        if (r.AdditionalPrincipal + r.AdditionalInterest != 0)
                        {
                            <td>@string.Format("{0:C}", r.AdditionalPrincipal + r.AdditionalInterest)</td>
                            <td>@string.Format("{0:C}", r.AdditionalPrincipal)</td>
                            <td>@string.Format("{0:C}", r.AdditionalInterest)</td>
                            <td>@string.Format("{0:C}", r.AdditionalTotalInterest)</td>
                            <td>@string.Format("{0:C}", r.AdditionalTotalPrincipal)</td>
                            <td>@string.Format("{0:C}", r.AdditionalBalance)</td>
                        }

                    }
                </tr>
                }
            </tbody>
        </table>
    </div>
    
}

@code {

}
